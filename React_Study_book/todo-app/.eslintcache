[{"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/index.js":"1","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/reportWebVitals.js":"2","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/App.js":"3","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/components/TodoTemplate.js":"4","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/components/TodoInsert.js":"5","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/components/TodoList.js":"6","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/components/TodoListItem.js":"7"},{"size":500,"mtime":1609667430963,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1609667430964,"results":"10","hashOfConfig":"9"},{"size":2409,"mtime":1609777424729,"results":"11","hashOfConfig":"9"},{"size":294,"mtime":1609668504590,"results":"12","hashOfConfig":"9"},{"size":1168,"mtime":1609670988448,"results":"13","hashOfConfig":"9"},{"size":1747,"mtime":1609778730538,"results":"14","hashOfConfig":"9"},{"size":1223,"mtime":1609779005736,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"122mbjv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/index.js",[],["32","33"],"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/reportWebVitals.js",[],"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/App.js",["34","35","36","37"],"import logo from './logo.svg';\nimport './App.css';\nimport React , {useCallback, useState, useRef, useReducer} from 'react';\nimport TodoTemplate from './components/TodoTemplate.js';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nfunction createBulkTodos(){\n  const array = [];\n  for(let i = 1; i <= 2500; i++){\n    array.push({\n      id : i,\n      text : '할 일 ${i}',\n      checked : false\n    });\n  }\n  return array;\n}\n\nfunction todoReducer(todos, action){\n  switch(action.type){\n    case 'INSERT' : //새로 추가\n      //{type : 'INSERT' , todo : {id : 1, text : 'todo', checked : false}}\n      return todos.concat(action.todo); \n    case 'REMOVE' : //제거\n      return todos.filter(todo => todo.id !== action.id);\n    case 'TOGGLE' : //토글\n      return  todos.map(todo => todo.id === action.id ? { ... todo , checked : !todo.checked} : todo);\n    default:\n      return todos;\n      \n  }\n}\n\n\nconst App =()=>{\n  \n  const[todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n  //원래 두 번째 파라미터에 초기 상태를 넣어 주어야 한다\n  //지금은 undefined 넣고 세번째 파라미터에 초기 상태를 만들어 주는 함수 createBulkTodo 넣어준다.\n  //이렇게 하면 컴포넌트가 맨 처음 렌더링 시에만 createBulkTodos 함수 호출\n\n\n  //함수형 업데이트\n  const onRemove = useCallback(\n    id => {\n      dispatch({type : 'REMOVE', id});\n    },\n    []//컴포넌트가 렌더링 될 때 만들었던 함수를 계속해서 재 사용\n  );\n\n  const onToggle = useCallback(\n    id => {\n      dispatch({type : 'TOGGLE', id});\n    },\n    []\n  );\n\n  //고윳값으로 사용될 id > 렌더링 필요 x 으로 useState가 아닌 useRef 사용해 컴포넌트에서 사용할 변수 생성\n  //ref를 사용하여 변수 담기\n  const nextId = useRef(2501);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id : nextId.current,\n        text,\n        checked : false\n      };\n      dispatch({type : 'INSERT', todo});\n      nextId.current += 1; \n    },\n    [],\n  );\n\n  //props로 전달해야 할 함수를 만들 때는 useCallback으로 함수 감싸주기\n  return (\n    <TodoTemplate>\n        <TodoInsert onInsert={onInsert}/>\n        <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/>\n    </TodoTemplate>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/components/TodoTemplate.js",[],"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/components/TodoInsert.js",[],"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/components/TodoList.js",[],"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/todo-app/src/components/TodoListItem.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":3,"column":30,"nodeType":"44","messageId":"45","endLine":3,"endColumn":38},{"ruleId":"47","severity":1,"message":"48","line":13,"column":14,"nodeType":"49","messageId":"50","endLine":13,"endColumn":24},{"ruleId":"51","severity":1,"message":"52","line":28,"column":62,"nodeType":"53","messageId":"54","endLine":28,"endColumn":63,"fix":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"58","text":"59"},"no-global-assign","no-unsafe-negation",[843,844],""]