[{"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/index.js":"1","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/reportWebVitals.js":"2","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/App.js":"3","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/About.js":"4","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/Home.js":"5","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/Profile.js":"6"},{"size":542,"mtime":1610548034638,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610546468120,"results":"9","hashOfConfig":"8"},{"size":966,"mtime":1610550469595,"results":"10","hashOfConfig":"8"},{"size":628,"mtime":1610550433054,"results":"11","hashOfConfig":"8"},{"size":237,"mtime":1610547038052,"results":"12","hashOfConfig":"8"},{"size":875,"mtime":1610549873930,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1eoc1yx",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/index.js",[],["29","30"],"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/reportWebVitals.js",[],"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/App.js",["31"],"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/About.js",["32"],"/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/Home.js",["33"],"import logo from './logo.svg';\nimport React from 'react';\n\nconst Home = () => {\n  return (\n    <div>\n        <h1>홈</h1>\n        <p>홈, 그 페이지는 가장 먼저 보여지는 페이지.</p>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/hong-eunbin/Documents/GitHub/React_Study/React_Study_book/router-tutorial/src/Profile.js",["34"],"import React from 'react';\n\nconst data = {\n    velopert : {\n        name : '김민준',\n        description : '리액트를 좋아하는 개발자'\n    },\n    gildong : {\n        name : '홍길동',\n        description : '고전 소설 홍길동전의 주인공'\n    }\n};\n//라우트로 사용되는 컴포넌트에서 받아오는 match라는 객체 안의 params 값 참조\nconst Profile = ({match}) => {{/*match 객체 안 > 현재 컴포넌트가 어떤 경로 규칙에 의해 보이는지에 대한 정보*/}\n    const {username} =match.params;\n    const profile = data[username];\n    if(!profile){\n        return <div>존재하지 않는 사용자입니다.</div>;\n    }\n\n    return(\n        <div>\n            <h3>\n                {username} ({profile.name})\n            </h3>\n            <p>{profile.description}</p>\n        </div>\n    );\n};\n\nexport default Profile;\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"44","line":14,"column":31,"nodeType":"45","messageId":"46","endLine":14,"endColumn":83},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]